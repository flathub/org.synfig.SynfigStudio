--- ./src/synfig/filesystem.h	2018-09-08 06:09:32.000000000 +0000
+++ ./src/synfig/filesystem.h.new	2019-11-25 07:03:46.450308262 +0000
@@ -136,6 +136,27 @@
 
 			bool operator < (const Identifier &other) const
 			{
+				if (file_system < other.file_system) return true;
+				if (other.file_system < file_system) return false;
+				if (filename < other.filename) return true;
+				if (other.filename < filename) return false;
+				return false;
+			}
+
+			bool operator > (const Identifier &other) const
+				{ return other < *this; }
+				
+			bool operator == (const Identifier &other) const
+			{
+				return file_system == other.file_system
+				    && filename == other.filename;
+			}
+
+			bool operator != (const Identifier &other) const
+				{ return !(*this == other); }			
+
+			/*bool operator < (const Identifier &other) const
+			{
 				if (file_system.get() < other.file_system.get()) return true;
 				if (other.file_system.get() < file_system.get()) return false;
 				if (filename < other.filename) return true;
@@ -145,9 +166,9 @@
 			bool operator > (const Identifier &other) const
 				{ return other < *this; }
 			bool operator != (const Identifier &other) const
-				{ return *this > other || other < *this; }
+				{ return *this > other || *this < other; }
 			bool operator == (const Identifier &other) const
-				{ return !(*this != other); }
+				{ return !(*this != other); }*/
 
 			ReadStream::Handle get_read_stream() const;
 			WriteStream::Handle get_write_stream() const;

--- ./src/synfig/filesystem.cpp	2018-09-08 06:09:32.000000000 +0000
+++ ./src/synfig/filesystem.cpp.new	2019-11-25 07:03:46.000000000 +0000
@@ -68,7 +68,8 @@
 
 FileSystem::ReadStream::ReadStream(FileSystem::Handle file_system):
 	Stream(file_system),
-	std::istream((std::streambuf*)this)
+	std::istream((std::streambuf*)this),
+	buffer_(0)
 {
 	setg(&buffer_ + 1, &buffer_ + 1, &buffer_ + 1);
 }
@@ -184,7 +185,7 @@
 {
 	String fixed = etl::cleanup_path(filename);
 	if (fixed == ".") fixed = "";
-	for(size_t i = 0; i < filename.size(); ++i)
+	for(size_t i = 0; i < fixed.size(); ++i)
 		if (fixed[i] == '\\') fixed[i] = '/';
 	return fixed;
 }
